{"version":3,"sources":["components/ShopifyButton.js","components/Product.js","components/Products.js","components/About.js","components/Footer.js","components/Feedback/FeedbackButton.js","network.js","App.js","serviceWorker.js","index.js"],"names":["id","a","window","ShopifyBuy","UI","onReady","shopifyClient","createComponent","node","document","getElementById","moneyFormat","options","ShopifyButton","props","useEffect","setupButton","className","useStyles","makeStyles","card","maxWidth","Product","classes","Card","CardMedia","component","alt","image","product","src","title","CardContent","Typography","gutterBottom","variant","color","CardActions","Products","products","map","key","About","console","log","children","Footer","theme","button","margin","spacing","position","bottom","right","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","Fade","React","forwardRef","ref","open","in","onEnter","onExited","other","style","useSpring","from","opacity","to","onStart","onRest","div","FeedbackButton","useState","setOpen","email","setEmail","message","setMessage","handleClose","Button","onClick","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","onSubmit","event","preventDefault","submit","then","catch","FormControl","InputLabel","htmlFor","Input","onChange","target","value","FormHelperText","multiline","type","urls","feedback","productsLocal","feedbackLocal","about","getAboutInformation","axios","get","request","data","getProducts","submitFeedback","post","qs","stringify","App","setAbout","setProducts","Promise","all","aboutText","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d43030eb.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport './ShopifyButton.scss';\n\nfunction ShopifyButton(props) {\n\n  useEffect(() => {\n    setupButton(props.id);\n  }, [props.id]);\n\n  return (\n    <div className=\"shopify-button\">\n      <div id={`product-component-${props.id}`}></div>\n    </div>\n  );\n}\n\nasync function setupButton(id) {\n  const ui = await window.ShopifyBuy.UI.onReady(window.shopifyClient);\n  ui.createComponent('product', {\n        id: id,\n        node: document.getElementById(`product-component-${id}`),\n        moneyFormat: '%24%7B%7Bamount%7D%7D',\n        options: {\n  \"product\": {\n    \"styles\": {\n      \"product\": {\n        \"@media (min-width: 601px)\": {\n          \"max-width\": \"calc(25% - 20px)\",\n          \"margin-left\": \"20px\",\n          \"margin-bottom\": \"50px\"\n        },\n        \"padding\": \"20px\"\n      }\n    },\n    \"buttonDestination\": \"modal\",\n    \"contents\": {\n      \"img\": false,\n      \"title\": false,\n      \"price\": false,\n      \"options\": false\n    },\n    \"text\": {\n      \"button\": \"View product\"\n    }\n  },\n  \"productSet\": {\n    \"styles\": {\n      \"products\": {\n        \"@media (min-width: 601px)\": {\n          \"margin-left\": \"-20px\"\n        }\n      }\n    }\n  },\n  \"modalProduct\": {\n    \"contents\": {\n      \"img\": false,\n      \"imgWithCarousel\": true,\n      \"button\": false,\n      \"buttonWithQuantity\": true\n    },\n    \"styles\": {\n      \"product\": {\n        \"@media (min-width: 601px)\": {\n          \"max-width\": \"100%\",\n          \"margin-left\": \"0px\",\n          \"margin-bottom\": \"0px\"\n        }\n      }\n    },\n    \"text\": {\n      \"button\": \"Add to cart\"\n    }\n  },\n  \"cart\": {\n    \"text\": {\n      \"total\": \"Subtotal\",\n      \"button\": \"Checkout\"\n    }\n  }\n},\n});\n}\n\nexport default ShopifyButton;","import React from 'react';\nimport './Product.scss';\nimport ShopifyButton from './ShopifyButton';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n  },\n});\n\nfunction Product(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      {/* <CardActionArea> */}\n        <CardMedia\n          component=\"img\"\n          alt=\"{props.product.title\"\n          // height=\"140\"\n          image={props.product.image.src}\n          title={props.product.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {props.product.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.product.title}\n          </Typography>\n        </CardContent>\n      {/* </CardActionArea> */}\n      <CardActions>\n      <ShopifyButton id={props.product.id}></ShopifyButton>\n      </CardActions>\n    </Card>\n\n    // <article className=\"product\">\n    //   <h3>{props.product.title}</h3>\n    //   <section class=\"product__image\">\n    //     <img src={props.product.image.src}></img>\n    //   </section>\n    //   <ShopifyButton id={props.product.id}></ShopifyButton>\n    // </article>\n  );\n}\n\nexport default Product;","import React, {Fragment} from 'react';\nimport Product from './Product';\n\nimport './Products.scss';\n\nfunction Products(props) {\n  const products = props.products.map(product => (<Product key={product.id} product={product}></Product>));\n  return (\n    <Fragment>\n    <h2>Symbols</h2>\n    <section className=\"products\">\n      {products}\n    </section>\n    </Fragment>\n  );\n}\n\nexport default Products;","import React from 'react';\nimport './About.scss';\n\nfunction About(props) {\n  console.log(props);\n  return (\n    <div className=\"About\">\n      {props.children}\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n  return (\n    <footer className=\"page-footer\">\n      \n    </footer>\n  );\n}\n\nexport default Footer;","import React, {Fragment} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { FormControl, FormLabel, FormHelperText, Input, InputLabel } from '@material-ui/core';\nimport { useSpring, animated } from 'react-spring';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n    position: \"fixed\",\n    bottom: 0,\n    right: 0,\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n  const { in: open, children, onEnter, onExited, ...other } = props;\n  const style = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: open ? 1 : 0 },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    },\n  });\n  \n\n  return (\n    <animated.div ref={ref} style={style} {...other}>\n      {children}\n    </animated.div>\n  );\n});\n\nexport default function FeedbackButton(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const emailValueChanged = function(event) {\n    setEmail(event.target.value);\n  }\n  const messageValueChanged = function(event) {\n    setMessage(event.target.value);\n  }\n\n  const submitForm = function(event) {\n    event.preventDefault();\n    props.submit({email, message})\n    .then(handleClose)\n    .catch(handleClose);\n  }\n\n  return (\n    <Fragment>\n      <Button onClick={handleOpen} variant=\"contained\" color=\"primary\" className={classes.button}>\n        {props.children}\n      </Button>\n\n      <Modal\n      aria-labelledby=\"spring-modal-title\"\n      aria-describedby=\"spring-modal-description\"\n      className={classes.modal}\n      open={open}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={open}>\n        <div className={classes.paper}>\n          <form onSubmit={submitForm}>\n          <FormControl>\n          <InputLabel htmlFor=\"email-input\">Email address</InputLabel>\n          <Input onChange={emailValueChanged} id=\"email-input\" aria-describedby=\"email-helper-text\" />\n          <FormHelperText id=\"email-helper-text\">We'll never share your email.</FormHelperText>\n          </FormControl>\n          <br></br>\n          <FormControl>\n          <InputLabel htmlFor=\"message-input\">Message</InputLabel>\n          <Input onChange={messageValueChanged} multiline={true} id=\"message-input\" aria-describedby=\"message-helper-text\" />\n          <FormHelperText id=\"email-helper-text\"></FormHelperText>\n          </FormControl>\n          <br></br>\n          <br></br>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n          </form>\n        </div>\n      </Fade>\n    </Modal>\n  </Fragment>\n  );\n}\n","import axios from 'axios';\nimport qs from 'qs';\n\nconst urls = {\n  products: \"https://symbols.sammeechward.com/products\",\n  feedback: \"https://symbols.sammeechward.com/feedback\",\n  productsLocal: \"http://localhost:4000/products\",\n  feedbackLocal: \"http://localhost:4000/feedback\",\n  about: 'https://raw.githubusercontent.com/meech-ward/SF-Custom-Symbols/master/about.md'\n}\n\nexport async function getAboutInformation() {\n  const request = await axios.get(urls.about);\n  return request.data;\n}\n\nexport async function getProducts() {\n  const request = await axios.get(urls.products);\n  return request.data;\n}\n\nexport async function submitFeedback(data) {\n  return axios.post(urls.feedback, qs.stringify(data));\n}","import React, {Fragment, useState, useEffect }  from 'react';\n\nimport './App.css';\n\nimport Products from './components/Products';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport FeedbackButton from './components/Feedback/FeedbackButton';\nimport Markdown from 'markdown-to-jsx';\n\nimport {getAboutInformation, getProducts, submitFeedback} from './network';\n\nfunction App() {\n\n  const [about, setAbout] = useState(\"\");\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n\n    (async () => {\n      try {\n        const [aboutText, products] = await Promise.all([getAboutInformation(), getProducts()]);\n        setAbout(aboutText);\n        setProducts(products);\n      } catch (error) {\n        console.log(\"Couldn't get about data or products\", error);\n      }\n    })();\n  }, []);\n  \n  \n  return (\n    <div className=\"App\">\n      <Products products={products}></Products>\n      <About><Markdown>{about}</Markdown></About>\n      <Footer></Footer>\n      <FeedbackButton submit={submitFeedback}>Feedback</FeedbackButton>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}